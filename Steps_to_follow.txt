# Create README.md file

# Creating git hub repository directly from VS-Code without using any git commands
1. Click on Source Control (Ctrl+Shift+G)
2. Click on + sign to add the pending files to the staging area.
3. Write commit message and then click to commit.
4. Click on Publish branch.
5. Select "Publish to GitHub public repository" (or private if you want to make your repository private).
6. Repository has been created with the same name as the project folder name.
7. Next time click on + sign and write commit reason and click on Sync Changes.

# Create .gitignore file


# Why we require a LICENSE in git repository in an open source project?
The goal of GitHub's open source licensing efforts is to provide a starting point to help you make an informed choice. GitHub displays license information to help users get information about open source licenses and the projects that use them. We hope it helps, but please keep in mind that we’re not lawyers and that we make mistakes like everyone else. For that reason, GitHub provides the information on an "as-is" basis and makes no warranties regarding any information or licenses provided on or through it, and disclaims liability for damages resulting from using the license information. If you have any questions regarding the right license for your code or any other legal issues relating to it, it’s always best to consult with a professional.

# create environment and requirements.txt file via shell scripting

# SHELL SCRIPTING
1. Create init_setup.sh file (U can write any name but it is a industrial practice.)
Whatever commands like pip install -r requirements.txt, creating an environment etc. we write in our git bash terminal, those commands are written in "init_setup.sh" file in the form of script and then all the commands are executed simultaneously.
No need to write every command manually.
This Shell Script is only applicable for Linux terminal and not for Windows (cmd) terminal.
How to run shell script: write bash file_name (here init_setup.sh) and press enter.

# Installing local packages steps:
1. write python setup.py install in gitbash terminal and press enter
2. write "-e ." in requirements.txt file and write pip install -r requirements.txt in gitbash terminal and press enter.